
>>> print_square = __import__('4-print_square').print_square

# Printing normal swuare
>>> print_square(2)
##
##

# When the size is zero
>>> print_square(0)

>>> print_square(5)
#####
#####
#####
#####
#####

>>> print_square(10)
##########
##########
##########
##########
##########
##########
##########
##########
##########
##########


>>> print_square()
Traceback (most recent call last):
TypeError: print_square() missing 1 required positional argument: 'size'

# Positional argument (size) being float

>>> print_square(3.4)
Traceback (most recent call last):
TypeError: size must be an integer

# Positional Argument being A tuple
>>> print_square((3, 5))
Traceback (most recent call last):
TypeError: size must be an integer

# positional size being a string
>>> print_square("david")
Traceback (most recent call last):
TypeError: size must be an integer

# positional size being a list
>>> print_square([1, 3, 4])
Traceback (most recent call last):
TypeError: size must be an integer

# positional argument being a dict
>>> print_square({"Name": "David", "Age": 21})
Traceback (most recent call last):
TypeError: size must be an integer

# positional argument size being a set
>>> print_square({1, 2, 3, 4, 5})
Traceback (most recent call last):
TypeError: size must be an integer

# positional argument size less than zero
>>> print_square(-5)
Traceback (most recent call last):
ValueError: size must be >= 0

# positional argument being infinity
>>> print_square(float('inf'))
Traceback (most recent call last):
TypeError: size must be an integer





